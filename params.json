{"name":"DEFCON","tagline":"The multi-sensory information radiator","body":"# DEFCON\r\n\r\nDEFCON keeps you aware of the state of your sofware and infrastructure, by listening for events and forwarding them to event handlers. You listen to events by installing one or more \"gateway\" plugins (REST, AMQP, etc), and you bring them to your attention by installing one or more handler plugins (web ui, audio, logstash, etc). \r\n\r\n## Prerequisits\r\n1. [nodejs](http://nodejs.org)\r\n\r\n## Installation\r\n```bash\r\nmkdir defcon\r\ncd defcon\r\nnpm install defcon\r\n```\r\n\r\n## Recommended Plugins\r\nDEFCON is useless without plugins. A basic set is provided via individual npm modules which should be installed (with ```npm install```) from the defcon installiation directory, so that the modules are installed as syblings of defcon rather than children, e.g.\r\n\r\n```\r\n/var/opt/defcon$ tree -d -L 2\r\n.\r\n└── node_modules\r\n    ├── defcon\r\n    ├── defcon-event-log\r\n    └── defcon-rest-gateway\r\n```\r\nThe recommended plugins are as follows. Please see their README.md files for installation and configuration.\r\n\r\n| Plugin | Description |\r\n|--------|-------------|\r\n| [REST Gateway](http://github.com/acuminous/defcon-rest-gateway) | Enables DEFCON to receive events via HTTP |\r\n| [Event Log](http://github.com/acuminous/defcon-event-log) | Displays a paginated, sortable & filterable table of events |\r\n| [Logstash UDP](http://github.com/acuminous/defcon-logstash-udp) | Forwards events to logstash via UDP |\r\n\r\nMore plugins are planned and we welcome contributions.\r\n\r\n## Starting\r\n```bash\r\nNODE_ENV=production node node_modules/defcon/server.js\r\n```\r\nDEFCON starts on localhost:8080 by default. You can override this (and any other configuration setting) from the command line, e.g.\r\n\r\n```bash\r\nNODE_ENV=production node node_modules/defcon/server --server.port=9090\r\n```\r\n\r\n## Configuration\r\nConfiguration is loaded from the following files if they exist\r\n\r\n1. $INSTALL_DIR/conf/default.json\r\n1. $INSTALL_DIR/conf/<environment>.json\r\n1. $INSTALL_DIR/conf/<hostname>.json\r\n1. $INSTALL_DIR/etc/defcon/defcon.json\r\n\r\nYou can also specify an additional configuration file from the command line, e.g. \r\n```bash\r\nNODE_ENV=production node node_modules/defcon/server.js --config=/path/to/config.json\r\n```\r\nThe final configuration is a merge of the individual configuration files and the command line arguments.\r\n\r\nSince defcon is a container for plugins, it's configuration options are minimal. We suggest you add custom settings to /etc/defcon/defcon.json or in a file specified on via the command line, since this is the easiest \r\noption for upgrades.\r\n\r\n```js\r\n{\r\n    \"server\": {\r\n        \"host\": \"0.0.0.0\",\r\n        \"port\": 8080,\r\n        \"workers\": 1\r\n    },\r\n    \"plugins\": {\r\n        // Specify the list of installed plugins. Order will dictate where the plugins appear in the UI\r\n        installed: [],\r\n\r\n        // Insert plugin configuration here, e.g.\r\n        \"defcon-event-log\": {\r\n            \"redis\": {\r\n                \"host\": \"localhost\",\r\n                \"port\": 6379,\r\n                \"db\": 0,\r\n                \"options\": {\r\n                    \"enable_offline_queue\": false\r\n                }\r\n            },\r\n            \"pageSize\": 14,\r\n            \"pages\": 10\r\n        }\r\n    },\r\n    \"logging\": {\r\n        // Any entries will be passed directly to winston\r\n        \"file\": {\r\n            \"transport\": \"File\",\r\n            \"filename\": \"defcon.log\",\r\n            \"maxsize\": 1048576,\r\n            \"maxFiles\": 3,\r\n            \"level\": \"info\",\r\n            \"colorize\": false\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}